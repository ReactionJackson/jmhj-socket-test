{"version":3,"sources":["components/MouseTest.js","components/ChatTest.js","App.js","index.js"],"names":["MouseTest","socket","uid","useState","dots","setDots","canMove","setCanMove","moveDot","e","document","hasFocus","emit","id","pos","x","clientX","y","clientY","toggleCanMove","useEffect","on","dot","prevDots","window","addEventListener","removeEventListener","map","color","key","style","position","left","top","width","height","borderRadius","backgroundColor","ChatTest","messages","setMessages","msg","setMsg","setPos","isMaster","setIsMaster","currentColor","setCurrentColor","moveBox","keyCode","newMsg","prevMessages","master","i","className","background","onClick","_","handleColorChange","JSON","stringify","onSubmit","preventDefault","handleSubmit","type","value","onChange","target","handleChange","port","process","PORT","Menu","styled","ul","App","setSocket","clients","setClients","setUid","SocketIOClient","to","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b888802.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst MouseTest = ({ socket, uid }) => {\n\n  const [ dots, setDots ] = useState([])\n  const [ canMove, setCanMove ] = useState(false)\n\n  const moveDot = e => {\n    if(document.hasFocus() && canMove) {\n      socket.emit('move_dot', {\n        uid: socket.id,\n        pos: { x: e.clientX, y: e.clientY },\n      })\n    }\n  }\n\n  const toggleCanMove = () => setCanMove(!canMove)\n\n  useEffect(() => {\n\n    if(socket) {\n\n      socket.on('add_dot', dot => {\n        setDots(prevDots => ([ ...prevDots, dot ]))\n      })\n\n      socket.on('update_dots', setDots)\n\n      window.addEventListener('mousemove', moveDot)\n      window.addEventListener('click', toggleCanMove)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', moveDot)\n      window.removeEventListener('click', toggleCanMove)\n    }\n\n  }, [ socket, moveDot, toggleCanMove ])\n\n  return (\n    <div>\n      { dots.map(({ uid, pos, color }) => (\n        <div\n          key={ uid }\n          style={{\n            position: 'absolute',\n            left: pos.x,\n            top: pos.y,\n            width: 20,\n            height: 20,\n            borderRadius: 10,\n            backgroundColor: color\n          }}\n        />\n      )) }\n    </div>\n  )\n}\n\nexport default MouseTest\n","import React, { useState, useEffect } from 'react'\n\nconst ChatTest = ({ socket }) => {\n\n  const [ messages, setMessages ] = useState([])\n  const [ msg, setMsg ] = useState('')\n  const [ pos, setPos ] = useState({ x: 0, y: 0 })\n  const [ isMaster, setIsMaster ] = useState(false)\n  const [ currentColor, setCurrentColor ] = useState({})\n\n  const colors = ['dodgerblue', 'tomato', 'mediumseagreen']\n\n  const handleColorChange = color => {\n    socket.emit('change color', color)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    socket.emit('chat message', msg)\n    setMsg('')\n  }\n\n  const handleChange = e => {\n    setMsg(e.target.value)\n  }\n\n  const moveBox = e => {\n    switch(e.keyCode) {\n      case 87: //up\n        socket.emit('move box', { x: 0, y: -1 })\n      break\n      case 83: //down\n        socket.emit('move box', { x: 0, y: 1 })\n      break\n      case 65: //left\n        socket.emit('move box', { x: -1, y: 0 })\n      break\n      case 68: //right\n        socket.emit('move box', { x: 1, y: 0 })\n      break\n    }\n  }\n\n  useEffect(() => {\n    if(socket) {\n\n      socket.on('chat message', newMsg => {\n        setMessages(prevMessages => ([ ...prevMessages, newMsg ]))\n      })\n\n      socket.on('move box', pos => {\n        setPos(pos)\n      })\n\n      socket.on('set master', master => {\n        setIsMaster(master)\n      })\n\n      socket.on('change color', color => {\n        setCurrentColor(color)\n      })\n\n      window.addEventListener('keyup', moveBox)\n    }\n\n    return () => {\n      window.removeEventListener('keyup', moveBox)\n    }\n\n  }, [ socket ])\n\n  return (\n    <div>\n      <ul id=\"messages\">\n        { messages.map((msg, i) => <li style={{ ...currentColor }} key={ i }>{ msg }</li>) }\n      </ul>\n      <div className={`master ${ !isMaster ? 'minion' : '' }`}>{ isMaster ? 'K' : 'M' }</div>\n      {\n        isMaster ? (\n          <ul id=\"colors\">\n            { colors.map((color, i) => (\n              <li\n                key={ i }\n                style={{ background: color }}\n                onClick={ _ => { handleColorChange(color) } }\n              />\n            )) }\n          </ul>\n        ) : null\n      }\n      <div id=\"someBox\" style={{ left: pos.x * 50, top: (pos.y * 50) + 30 }}></div>\n      <pre>\n        { JSON.stringify(pos, null, 2) }\n      </pre>\n      <form onSubmit={ e => handleSubmit(e) }>\n        <input\n          type=\"text\"\n          value={ msg }\n          onChange={ e => handleChange(e) }\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChatTest\n","import React, { useState, useEffect } from 'react'\nimport SocketIOClient from 'socket.io-client'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport MouseTest from './components/MouseTest'\nimport ChatTest from './components/ChatTest'\n\nconst port = process.env.PORT || 3001\n\nconst App = () => {\n\n  const [ socket, setSocket ] = useState(null)\n  const [ clients, setClients ] = useState([])\n  const [ uid, setUid ] = useState(null)\n\n  useEffect(() => setSocket(SocketIOClient('https://localhost/' + port)), [])\n\n  useEffect(() => {\n    if(socket) {\n      socket.on('set_uid', setUid)\n      socket.on('update_clients', setClients)\n    }\n  }, [ socket ])\n\n  return (\n    <Router>\n      <nav>\n        <Menu>\n          <li><Link to=\"/chat-test\">Chat Test</Link></li>\n          <li><Link to=\"/mouse-test\">Mouse Test</Link></li>\n        </Menu>\n        <div>ID: { uid }</div>\n        <pre>Clients: { JSON.stringify(clients, null, 2) }</pre>\n      </nav>\n      <Switch>\n        <Route path=\"/chat-test\">\n          <ChatTest socket={ socket } uid={ uid } />\n        </Route>\n        <Route path=\"/mouse-test\">\n          <MouseTest socket={ socket } uid={ uid } />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nconst Menu = styled.ul`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 30px;\n  background-color: #000;\n  display: flex;\n  align-items: center;\n  list-style-type: none;\n  li {\n    margin-left: 15px;\n  }\n  a {\n    color: #fff;\n    text-decoration: none;\n  }\n`\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}